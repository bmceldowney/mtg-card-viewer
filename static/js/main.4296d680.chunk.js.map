{"version":3,"sources":["actions/actionTypes.js","reducers/cardReducer.js","reducers/appReducer.js","reducers/index.js","components/Card/Card.js","components/PagedList/PagedList.js","components/Footer/Footer.js","components/Header/Header.js","components/SearchBox/SearchBox.js","components/SortButton/SortButton.js","actions/appActions.js","actions/fetchCards.js","actions/searchCards.js","actions/sortCards.js","containers/App.js","store.js","index.js"],"names":["FETCH_CARDS_PENDING","FETCH_CARDS_SUCCESS","FETCH_CARDS_ERROR","PAGE_LOADED","SEARCH_CRITERIA_ENTERED","CLEAR_CARDS","CHANGE_SORT","buildInitialState","placeholderCount","state","allIds","byIds","id","push","imageUrl","console","log","initialState","title","loadingFromApi","lastPageFetched","totalCardCount","currentSearchCriteria","name","artist","rarity","setName","sortField","combineReducers","app","action","type","payload","pageNumber","totalCount","searchCriteria","value","fieldName","cards","newState","forEach","card","originalType","indexOf","Card","props","blankPlaceholder","className","noImagePlaceholder","imageStyle","backgroundImage","key","style","PagedList","children","pagedList","fetchItemsForPage","hasNextPage","ref","useRef","useState","pageToFetch","setPageToFetch","scrollHandler","useCallback","event","currentTarget","scrollTop","scrollHeight","clientHeight","useEffect","component","current","addEventListener","removeEventListener","Footer","loadedCardCount","Header","setSearchCriteria","changeSort","loadingClassName","SearchBox","popoverOpen","setPopoverOpen","searchInputs","Object","keys","map","field","data-fieldname","disabled","placeholder","onChange","handleChange","target","dataset","fieldname","Popover","placement","isOpen","toggle","PopoverBody","SortButton","handleClick","textContent","sortList","Button","onClick","clearCards","requestQueue","fetchCardsInternal","dispatch","getState","url","URL","searchParams","set","cardUrl","href","fetch","then","res","headers","json","error","pageLoaded","products","catch","fetchCardsError","finally","length","pop","fetchCards","timeout","searchCards","criteria","clearTimeout","setTimeout","sortCards","connect","header","footer","bindActionCreators","itemId","item","ReactDOM","render","store","createStore","rootReducer","applyMiddleware","thunk","document","getElementById"],"mappings":"gZAGaA,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAoB,oBACpBC,EAAc,cACdC,EAA0B,0BAC1BC,EAAc,cACdC,EAAc,cCP3B,SAASC,EAAkBC,GAMzB,IALA,IAAMC,EAAQ,CACZC,OAAQ,GACRC,MAAO,IAGAC,EAAK,EAAGA,EAAKJ,EAAkBI,IACtCH,EAAMC,OAAOG,KAAKD,GAClBH,EAAME,MAAMC,GAAM,CAAEA,KAAIE,SAAU,eAGpC,OADAC,QAAQC,IAAI,uBACLP,EAGT,IAAMQ,EAAeV,EAAkB,ICNjCU,EAAe,CACnBC,MAAO,mCACPC,gBAAgB,EAChBC,gBAAiB,EACjBC,eAAgB,EAChBC,sBAAuB,CAAEC,KAAM,GAAIC,OAAQ,GAAIC,OAAQ,GAAIC,QAAS,IACpEC,UAAW,QCZEC,cAAgB,CAC7BC,IDca,WAAwC,IAA/BpB,EAA8B,uDAAtBQ,EAAca,EAAQ,uCACpD,OAAQA,EAAOC,MACb,KAAK9B,EACH,OAAO,eACFQ,EADL,CAEEU,gBAAgB,IAEpB,KAAKnB,EACH,OAAO,eACFS,EADL,CAEEU,gBAAgB,IAEpB,KAAKjB,EACH,OAAO,eACFO,EADL,CAEEU,gBAAgB,IAEpB,KAAKhB,EACH,OAAO,eACFM,EADL,CAEEW,gBAAiBU,EAAOE,QAAQC,WAChCZ,eAAgBS,EAAOE,QAAQE,aAEnC,KAAK9B,EACH,IAAK0B,EAAOE,QAAQG,eAAgB,OAAO1B,EAC3C,IAAMa,EAAwBb,EAAMa,sBAC9Bc,EAAQN,EAAOE,QAAQG,eAAeC,MACtCC,EAAYP,EAAOE,QAAQG,eAAeE,UAIhD,OAFAf,EAAsBe,GAAaD,EAE5B,eACF3B,EADL,CAEEa,0BAEJ,KAAKjB,EACH,OAAO,eACFI,EADL,CAEEY,eAAgB,EAChBD,gBAAiB,IAErB,KAAKd,EACH,OAAO,eACFG,EADL,CAEEkB,UAAWG,EAAOE,UAEtB,QACE,OAAOvB,IC5DX6B,MFYa,WAAwC,IAA/B7B,EAA8B,uDAAtBQ,EAAca,EAAQ,uCACpD,OAAQA,EAAOC,MACb,KAAK9B,EACH,IAAMsC,EAAQ,eAAQ9B,GAwBtB,OArBI8B,EAAS5B,MAAM,IAAqC,gBAA/B4B,EAAS5B,MAAM,GAAGG,WACzCyB,EAAS5B,MAAQ,GACjB4B,EAAS7B,OAAS,IAGpBoB,EAAOE,QAAQQ,SAAQ,SAAAC,GAAS,IACtBlB,EAAsDkB,EAAtDlB,KAAMmB,EAAgDD,EAAhDC,aAAchB,EAAkCe,EAAlCf,QAASd,EAAyB6B,EAAzB7B,GAAIY,EAAqBiB,EAArBjB,OAAQV,EAAa2B,EAAb3B,UAEf,IAA9BL,EAAMC,OAAOiC,QAAQ/B,KACvB2B,EAAS5B,MAAMC,GAAM,CACnBW,OACAmB,eACAhB,UACAd,KACAY,SACAV,YAEFyB,EAAS7B,OAAOG,KAAKD,MAEtB,IAEI2B,EACT,KAAKlC,EACH,OAAOE,EAAkB,IAC3B,QACE,OAAOE,M,MGDEmC,MA7Cf,YAEI,IAAD,IADDC,MAAStB,EACR,EADQA,KAAMC,EACd,EADcA,OAAQE,EACtB,EADsBA,QAASgB,EAC/B,EAD+BA,aAAc5B,EAC7C,EAD6CA,SAAUL,EACvD,EADuDA,MAAOG,EAC9D,EAD8DA,GAEzDkC,EAAmB,yBAAKC,UAAU,qBAClCC,EACJ,yBAAKD,UAAU,kBACb,yBAAKA,UAAU,QACb,0BAAMA,UAAU,eAAexB,GAC/B,0BAAMwB,UAAU,YAAYrB,GAC5B,0BAAMqB,UAAU,UAAUvB,GAC1B,yBAAKuB,UAAU,iBACb,uDAMFE,EAAa,CACjBC,gBAAgB,OAAD,OAASpC,EAAT,MAGjB,MAAiB,gBAAbA,EAAmCgC,EAClChC,EAGH,yBAAKiC,UAAS,yBAAoBtC,GAAS0C,IAAKvC,GAC9C,yBAAKmC,UAAU,WACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,QAAQK,MAAOH,MAGlC,yBAAKF,UAAU,QACb,yBAAKA,UAAU,QACb,0BAAMA,UAAU,eAAexB,GAC/B,0BAAMwB,UAAU,iBAAiBL,GACjC,0BAAMK,UAAU,YAAYrB,GAC5B,0BAAMqB,UAAU,UAAUvB,OAfdwB,G,cCqDTK,MA/Df,YAAgE,IAA3CC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,UAAWC,EAAqB,EAArBA,kBAChCpC,EAAiDmC,EAAjDnC,gBAAiBD,EAAgCoC,EAAhCpC,eAAgBsC,EAAgBF,EAAhBE,YACnCC,EAAMC,mBAFiD,EAGvBC,mBAAS,GAHc,mBAGtDC,EAHsD,KAGzCC,EAHyC,KAUvDC,EAAgBC,uBACpB,SAAAC,GAAU,IAAD,EAC2CA,EAAMC,cAAhDC,EADD,EACCA,YADD,EACYC,cACAD,EAFZ,EAC0BE,cAMX,OAGIR,EAAczC,IAChBqC,GACHtC,GAQnB2C,EAAeD,EAAc,KAGjC,CAACA,EAAazC,EAAiBD,EAAgBsC,IAsBjD,OAfAa,qBAAU,WACR,IAAMC,EAAYb,EAAIc,QAGtB,OAFAD,EAAUE,iBAAiB,SAAUV,GAE9B,kBAAMQ,EAAUG,oBAAoB,SAAUX,MACpD,CAACA,IAMJO,qBAAU,WACRd,EAAkBK,KACjB,CAACA,EAAaL,IAGf,yBAAKE,IAAKA,EAAKX,UAAU,cACtBO,I,MCvDQqB,MAXf,YAAiE,IAAD,IAA9C9B,MAASxB,EAAqC,EAArCA,eAAgBuD,EAAqB,EAArBA,gBACzC,OACE,yBAAK7B,UAAU,UACb,2DACA,0BAAMA,UAAU,SACb6B,EADH,oBACqCvD,EADrC,kB,MCoBNN,QAAQC,IAAI,oBACG6D,MA3Bf,YAII,IAAD,IAHDhC,MAAS3B,EAGR,EAHQA,MAAOC,EAGf,EAHeA,eAAgBG,EAG/B,EAH+BA,sBAChCwD,EAEC,EAFDA,kBACAC,EACC,EADDA,WAEMC,EAAmB7D,EAAiB,UAAY,GAEtD,OACE,yBAAK4B,UAAS,iBAAYiC,IACxB,8BAAO9D,GACP,0BAAM6B,UAAU,WACd,kBAAC,EAAD,CACEF,MAAO,CAAE1B,iBAAgBG,yBACzBwD,kBAAmBA,IAErB,kBAAC,EAAD,CACEjC,MAAO,CAAE1B,kBACT4D,WAAYA,IAEd,0BAAMhC,UAAU,qBACd,kC,sBCyBKkC,MA9Cf,YAGI,IAAD,IAFDpC,MAAS1B,EAER,EAFQA,eAAgBG,EAExB,EAFwBA,sBACzBwD,EACC,EADDA,kBACC,EACqClB,oBAAS,GAD9C,mBACMsB,EADN,KACmBC,EADnB,KAKKC,EAFeC,OAAOC,KAAKhE,GAECiE,KAAI,SAAAC,GACpC,OACE,2BACEC,iBAAgBD,EAChBrC,IAAKqC,EACLE,SAAUvE,EACVY,KAAK,OACL4D,YAAW,yBAAoBH,GAC/BpD,MAAOd,EAAsBkE,GAC7BI,SAAUC,OAKhB,SAASA,EAAa5B,GACpB,IAAM5B,EAAY4B,EAAM6B,OAAOC,QAAQC,UACjC5D,EAAQ6B,EAAM6B,OAAO1D,MAE3B0C,EAAkB,CAAEzC,YAAWD,UAGjC,OACE,yBAAKxB,GAAG,aAAamC,UAAU,cAC7B,yBAAKA,UAAU,WACf,kBAACkD,EAAA,EAAD,CACEC,UAAU,SACVC,OAAQjB,EACRY,OAAO,aACPM,OA/BS,kBAAMjB,GAAgBD,KAiC/B,kBAACmB,EAAA,EAAD,KACE,yBAAKtD,UAAU,iBAAiBqC,O,gBCC3BkB,MAxCf,YAAgE,IAAjCnF,EAAgC,EAAzC0B,MAAS1B,eAAkB4D,EAAc,EAAdA,WAAc,EACvBnB,oBAAS,GADc,mBACtDsB,EADsD,KACzCC,EADyC,KAK7D,SAASoB,EAAYtC,GACnB,IAAMtC,EAAYsC,EAAM6B,OAAOU,YAC/BzB,EAAWpD,GAGb,IAAM8E,EAPa,CAAC,OAAQ,QAAS,SAAU,UAOnBlB,KAAI,SAAAC,GAC9B,OACE,kBAACkB,EAAA,EAAD,CACEhB,SAAUvE,EACVgC,IAAKqC,EACLmB,QAASJ,EACTxD,UAAU,cAETyC,MAKP,OACE,6BACE,yBAAK5E,GAAG,cAAcmC,UAAU,gBAChC,kBAACkD,EAAA,EAAD,CACEC,UAAU,SACVC,OAAQjB,EACRY,OAAO,cACPM,OA5BS,kBAAMjB,GAAgBD,KA8B/B,kBAACmB,EAAA,EAAD,KACE,yBAAKtD,UAAU,iBAAiB0D,OCOnC,SAASG,IACd,MAAO,CACL7E,KAAM1B,EACN2B,QAAS,MCrCb,IAAM6E,EAAe,GAgBrB,SAASC,IAAoC,IAAjB7E,EAAgB,uDAAH,EACvC,OAAO,SAAC8E,EAAUC,GAAc,IAAD,EAGzBA,IADFnF,IAAOP,EAFoB,EAEpBA,sBAAuBK,EAFH,EAEGA,UAAWR,EAFd,EAEcA,eAMrC8F,EAAM,IAAIC,IADH,WADG,oCAIhBD,EAAIE,aAAaC,IAAI,WALJ,IAMjBH,EAAIE,aAAaC,IAAI,OAAQnF,GAC7BgF,EAAIE,aAAaC,IAAI,OAAQ,YAC7BH,EAAIE,aAAaC,IAAI,UAAWzF,GAEhC0D,OAAOC,KAAKhE,GAAuBkB,SAAQ,SAAAW,GACrC7B,EAAsB6B,IACxB8D,EAAIE,aAAaC,IAAIjE,EAAK7B,EAAsB6B,OAIpD,IAAMkE,EAAUJ,EAAIK,KAEpB,GAAInG,EACF0F,EAAahG,KAAKoB,OADpB,CAKA,IAAIC,EAAa,EACjB6E,ED7CK,CACLhF,KAAM/B,IC6CNuH,MAAMF,GACHG,MAAK,SAAAC,GAKJ,OAJAA,EAAIC,QAAQlF,SAAQ,SAACJ,EAAOe,GACd,gBAARA,IAAuBjB,EAAaE,MAGnCqF,EAAIE,UAEZH,MAAK,SAAAC,GACJ,GAAIA,EAAIG,MACN,MAAMH,EAAIG,MDnDb,IAA2BtF,EC4D1B,OAPAyE,GDrD0BzE,ECqDCmF,EAAInF,MDpD9B,CACLP,KAAM9B,EACN+B,QAASM,KCmDLyE,EDxCD,YAAiD,IAA3B9E,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,WACvC,MAAO,CACLH,KAAM5B,EACN6B,QAAS,CAAEC,aAAYC,eCsCjB2F,CAAW,CACT5F,aACAC,gBAGGuF,EAAIK,YAEZC,OAAM,SAAAH,GACL7G,QAAQC,IAAI4G,GACZb,EDzDD,SAAyBa,GAC9B,MAAO,CACL7F,KAAM7B,EACN0H,MAAOA,GCsDMI,CAAgBJ,OAE1BK,SAAQ,WACP,GAAIpB,EAAaqB,OAAQ,CACvB,IAAMrE,EAAcgD,EAAasB,MACjC,GAAItE,EAAc5B,EAChB,OAAO8E,EAASD,EAAmBjD,UAOhCuE,MA7Ef,SAAoBnG,GAClB,OAAO,SAAA8E,GACL,OAAIF,EAAaqB,OACRnB,EAASD,EAAmBD,EAAasB,QAEzCpB,EAASD,EAAmB7E,MClBrCoG,EAAU,KAeCC,MAbf,SAAqBC,GACnB,OAAO,SAAAxB,GACLA,EF+BK,CACLhF,KAAM3B,EACN4B,QAAS,CAAEG,eEjCoBoG,KAC/BC,aAAaH,GACbA,EAAU,KAEVA,EAAUI,YAAW,WACnB1B,EAASH,KACTG,EAASqB,EAAW,MACnB,OCHQM,MARf,SAAmB/G,GACjB,OAAO,SAAAoF,GACLA,EAASH,KACTG,EH6CG,SAAoBpF,GACzB,MAAO,CACLI,KAAMzB,EACN0B,QAASL,GGhDAoD,CAAWpD,IACpBoF,EAASqB,EAAW,M,MCiETO,ICpEwB1H,EDoExB0H,eA/DS,SAAAlI,GACtB,IAAMmI,EAAM,eAAQnI,EAAMoB,KACpB0B,EAAY,CAChBnC,gBAAiBX,EAAMoB,IAAIT,gBAC3BD,eAAgBV,EAAMoB,IAAIV,eAC1BsC,YAAahD,EAAM6B,MAAM5B,OAAOwH,OAASzH,EAAMoB,IAAIR,gBAE/CwH,EAAM,eACPpI,EAAMoB,IADC,CAEV+C,gBAAiBS,OAAOC,KAAK7E,EAAM6B,MAAM3B,OAAOuH,SAGlD,OAAO,aACLU,SACAC,SACAtF,aACG9C,EAAM6B,UAIc,SAAAyE,GAAQ,OACjC+B,YACE,CACEtF,kBAAmB,SAAAvB,GAAU,OAAImG,EAAWnG,IAC5C6C,kBAAmB,SAAA3C,GAAc,OAAImG,EAAYnG,IACjD4C,WAAY,SAAApD,GAAS,OAAI+G,EAAU/G,KAErCoF,KAoCW4B,EAjCf,YASI,IARFC,EAQC,EARDA,OACAC,EAOC,EAPDA,OACAtF,EAMC,EANDA,UACA7C,EAKC,EALDA,OACAC,EAIC,EAJDA,MACA6C,EAGC,EAHDA,kBACAsB,EAEC,EAFDA,kBACAC,EACC,EADDA,WAEMzC,EAAQ5B,EAAO6E,KAAI,SAAAwD,GACvB,IAAMC,EAAOrI,EAAMoI,GAEnB,OAAO,kBAAC,EAAD,CAAMlG,MAAOmG,EAAM7F,IAAK6F,EAAKpI,QAKtC,OAFA0D,qBAAU,kBAAMvD,QAAQC,IAAI,qBAG1B,yBAAK+B,UAAU,WACb,kBAAC,EAAD,CACEF,MAAO+F,EACP9D,kBAAmBA,EACnBC,WAAYA,IAEd,kBAAC,EAAD,CAAWxB,UAAWA,EAAWC,kBAAmBA,GACjDlB,GAEH,kBAAC,EAAD,CAAQO,MAAOgG,Q,YE3DrBI,IAASC,OACP,kBAAC,IAAD,CAAUC,MDJHC,YAAYC,EAAapI,EAAcqI,YAAgBC,OCK5D,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.4296d680.chunk.js","sourcesContent":["/**\n * Holds some constant strings for identifying action types\n */\nexport const FETCH_CARDS_PENDING = \"FETCH_CARDS_PENDING\";\nexport const FETCH_CARDS_SUCCESS = \"FETCH_CARDS_SUCCESS\";\nexport const FETCH_CARDS_ERROR = \"FETCH_CARDS_ERROR\";\nexport const PAGE_LOADED = \"PAGE_LOADED\";\nexport const SEARCH_CRITERIA_ENTERED = \"SEARCH_CRITERIA_ENTERED\";\nexport const CLEAR_CARDS = \"CLEAR_CARDS\";\nexport const CHANGE_SORT = \"CHANGE_SORT\";\n","import { FETCH_CARDS_SUCCESS, CLEAR_CARDS } from \"../actions/actionTypes\";\n\nfunction buildInitialState(placeholderCount) {\n  const state = {\n    allIds: [],\n    byIds: {}\n  };\n\n  for (let id = 0; id < placeholderCount; id++) {\n    state.allIds.push(id);\n    state.byIds[id] = { id, imageUrl: \"placeholder\" };\n  }\n  console.log(\"built initial state\");\n  return state;\n}\n\nconst initialState = buildInitialState(20);\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_CARDS_SUCCESS:\n      const newState = { ...state };\n\n      // clear placeholders\n      if (newState.byIds[0] && newState.byIds[0].imageUrl === \"placeholder\") {\n        newState.byIds = {};\n        newState.allIds = [];\n      }\n\n      action.payload.forEach(card => {\n        const { name, originalType, setName, id, artist, imageUrl } = card;\n\n        if (state.allIds.indexOf(id) === -1) {\n          newState.byIds[id] = {\n            name,\n            originalType,\n            setName,\n            id,\n            artist,\n            imageUrl\n          };\n          newState.allIds.push(id);\n        }\n      }, {});\n\n      return newState;\n    case CLEAR_CARDS:\n      return buildInitialState(20);\n    default:\n      return state;\n  }\n}\n","import {\n  FETCH_CARDS_ERROR,\n  FETCH_CARDS_PENDING,\n  FETCH_CARDS_SUCCESS,\n  PAGE_LOADED,\n  SEARCH_CRITERIA_ENTERED,\n  CLEAR_CARDS,\n  CHANGE_SORT\n} from \"../actions/actionTypes\";\n\nconst initialState = {\n  title: \"Magic: the Gathering Card Viewer\",\n  loadingFromApi: false,\n  lastPageFetched: 0,\n  totalCardCount: 0,\n  currentSearchCriteria: { name: \"\", artist: \"\", rarity: \"\", setName: \"\" },\n  sortField: \"name\"\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_CARDS_SUCCESS:\n      return {\n        ...state,\n        loadingFromApi: false\n      };\n    case FETCH_CARDS_PENDING:\n      return {\n        ...state,\n        loadingFromApi: true\n      };\n    case FETCH_CARDS_ERROR:\n      return {\n        ...state,\n        loadingFromApi: false\n      };\n    case PAGE_LOADED:\n      return {\n        ...state,\n        lastPageFetched: action.payload.pageNumber,\n        totalCardCount: action.payload.totalCount\n      };\n    case SEARCH_CRITERIA_ENTERED:\n      if (!action.payload.searchCriteria) return state;\n      const currentSearchCriteria = state.currentSearchCriteria;\n      const value = action.payload.searchCriteria.value;\n      const fieldName = action.payload.searchCriteria.fieldName;\n\n      currentSearchCriteria[fieldName] = value;\n\n      return {\n        ...state,\n        currentSearchCriteria\n      };\n    case CLEAR_CARDS:\n      return {\n        ...state,\n        totalCardCount: 0,\n        lastPageFetched: 0\n      };\n    case CHANGE_SORT:\n      return {\n        ...state,\n        sortField: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport cards from \"./cardReducer\";\nimport app from \"./appReducer\";\n\nexport default combineReducers({\n  app,\n  cards\n});\n","import React from \"react\";\nimport \"./Card.css\";\n\nfunction Card({\n  props: { name, artist, setName, originalType, imageUrl, state, id }\n}) {\n  const blankPlaceholder = <div className=\"card placeholder\"></div>;\n  const noImagePlaceholder = (\n    <div className=\"flip-container\">\n      <div className=\"card\">\n        <span className=\"title first\">{name}</span>\n        <span className=\"set-name\">{setName}</span>\n        <span className=\"artist\">{artist}</span>\n        <div className=\"no-image-text\">\n          <span>No Image Available</span>\n        </div>\n      </div>\n    </div>\n  );\n\n  const imageStyle = {\n    backgroundImage: `url(${imageUrl})`\n  };\n\n  if (imageUrl === \"placeholder\") return blankPlaceholder;\n  if (!imageUrl) return noImagePlaceholder;\n\n  return (\n    <div className={`flip-container ${state}`} key={id}>\n      <div className=\"flipper\">\n        <div className=\"front\">\n          <div className=\"card\">\n            <div className=\"image\" style={imageStyle}></div>\n          </div>\n        </div>\n        <div className=\"back\">\n          <div className=\"card\">\n            <span className=\"title first\">{name}</span>\n            <span className=\"original-type\">{originalType}</span>\n            <span className=\"set-name\">{setName}</span>\n            <span className=\"artist\">{artist}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React, { useEffect, useRef, useState, useCallback } from \"react\";\nimport \"./PagedList.css\";\n\n/**\n * The component responsible for laying out and displaying our items\n *\n * In a production application I would look to bring in a virtualized\n * component, similar to react-window\n *\n * @param {Object} propsObject - an object containing a props object with the following properties:\n *         {Integer} lastPageFetched - the number of the last page that was fetched from the API\n *         {Boolean} loadingFromApi - a boolean indicating if an API request is currently in progress\n *         {Boolean} hasNextPage - a boolean tracking whether there are any remaning pages to load from the API\n * @param {Function} fetchItemsForPage - callback to invoke when loading items for a specific page from the API\n */\nfunction PagedList({ children, pagedList, fetchItemsForPage }) {\n  const { lastPageFetched, loadingFromApi, hasNextPage } = pagedList;\n  const ref = useRef(); // ref so we can hook up a scroll event listener\n  const [pageToFetch, setPageToFetch] = useState(1); // track the next page to fetch\n\n  /**\n   * A function that monitors the scroll position of the list to trigger\n   * loading of more items from the API when the user nears the bottom\n   * @param {Event} event - the DOM scroll event\n   */\n  const scrollHandler = useCallback(\n    event => {\n      const { scrollTop, scrollHeight, clientHeight } = event.currentTarget;\n      const lowerBound = scrollTop + clientHeight;\n      const distanceToEnd = scrollHeight - lowerBound;\n      // TODO: instead of using an arbitrary number, do some calculations to\n      // determine the actual page height based on row length and find the\n      // optimal threshold in pixels\n      const loadThreshold = 1500;\n\n      const withinLoadThreshold = distanceToEnd < loadThreshold;\n      const alreadyLoadedPage = pageToFetch > lastPageFetched;\n      const loadedAllCards = !hasNextPage;\n      const appIsLoading = loadingFromApi;\n\n      if (\n        withinLoadThreshold &&\n        !alreadyLoadedPage &&\n        !loadedAllCards &&\n        !appIsLoading\n      ) {\n        setPageToFetch(pageToFetch + 1);\n      }\n    },\n    [pageToFetch, lastPageFetched, loadingFromApi, hasNextPage]\n  );\n\n  /**\n   * When the component mounts, listen to the scroll event\n   * Make sure to clean up on unmount\n   */\n  useEffect(() => {\n    const component = ref.current;\n    component.addEventListener(\"scroll\", scrollHandler);\n\n    return () => component.removeEventListener(\"scroll\", scrollHandler);\n  }, [scrollHandler]);\n\n  /**\n   * When the pageToFetch state property is updated, fire off the action to\n   * get items for the next page\n   */\n  useEffect(() => {\n    fetchItemsForPage(pageToFetch);\n  }, [pageToFetch, fetchItemsForPage]);\n\n  return (\n    <div ref={ref} className=\"paged-list\">\n      {children}\n    </div>\n  );\n}\n\nexport default PagedList;\n","/**\n * Displays some extra info, like how many cards are loaded and who made\n * this thing\n */\nimport React from \"react\";\nimport \"./Footer.css\";\n\nfunction Footer({ props: { totalCardCount, loadedCardCount } }) {\n  return (\n    <div className=\"footer\">\n      <span>Created by Ben McEldowney</span>\n      <span className=\"count\">\n        {loadedCardCount} cards loaded of {totalCardCount} total cards\n      </span>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport { SearchBox, SortButton } from \"../\";\nimport \"./Header.css\";\n\n// TODO: Add theme chooser UI\nfunction Header({\n  props: { title, loadingFromApi, currentSearchCriteria },\n  setSearchCriteria,\n  changeSort\n}) {\n  const loadingClassName = loadingFromApi ? \"loading\" : \"\";\n\n  return (\n    <div className={`header ${loadingClassName}`}>\n      <span>{title}</span>\n      <span className=\"widgets\">\n        <SearchBox\n          props={{ loadingFromApi, currentSearchCriteria }}\n          setSearchCriteria={setSearchCriteria}\n        ></SearchBox>\n        <SortButton\n          props={{ loadingFromApi }}\n          changeSort={changeSort}\n        ></SortButton>\n        <span className=\"loading-indicator\">\n          <div></div>\n        </span>\n      </span>\n    </div>\n  );\n}\nconsole.log(\"Header imported!\");\nexport default Header;\n","import React, { useState } from \"react\";\nimport { Popover, PopoverBody } from \"reactstrap\";\nimport \"./SearchBox.css\";\n\nfunction SearchBox({\n  props: { loadingFromApi, currentSearchCriteria },\n  setSearchCriteria\n}) {\n  const [popoverOpen, setPopoverOpen] = useState(false);\n  const toggle = () => setPopoverOpen(!popoverOpen);\n  const searchFields = Object.keys(currentSearchCriteria);\n\n  const searchInputs = searchFields.map(field => {\n    return (\n      <input\n        data-fieldname={field}\n        key={field}\n        disabled={loadingFromApi}\n        type=\"text\"\n        placeholder={`Search by card ${field}`}\n        value={currentSearchCriteria[field]}\n        onChange={handleChange}\n      />\n    );\n  });\n\n  function handleChange(event) {\n    const fieldName = event.target.dataset.fieldname;\n    const value = event.target.value;\n\n    setSearchCriteria({ fieldName, value });\n  }\n\n  return (\n    <div id=\"search-box\" className=\"search-box\">\n      <div className=\"toggle\"></div>\n      <Popover\n        placement=\"bottom\"\n        isOpen={popoverOpen}\n        target=\"search-box\"\n        toggle={toggle}\n      >\n        <PopoverBody>\n          <div className=\"search-inputs\">{searchInputs}</div>\n        </PopoverBody>\n      </Popover>\n    </div>\n  );\n}\n\nexport default SearchBox;\n","import React, { useState } from \"react\";\nimport \"./SortButton.css\";\nimport { Button, Popover, PopoverBody } from \"reactstrap\";\n\nfunction SortButton({ props: { loadingFromApi }, changeSort }) {\n  const [popoverOpen, setPopoverOpen] = useState(false);\n  const toggle = () => setPopoverOpen(!popoverOpen);\n  const sortFields = [\"name\", \"color\", \"rarity\", \"artist\"];\n\n  function handleClick(event) {\n    const sortField = event.target.textContent;\n    changeSort(sortField);\n  }\n\n  const sortList = sortFields.map(field => {\n    return (\n      <Button\n        disabled={loadingFromApi}\n        key={field}\n        onClick={handleClick}\n        className=\"sort-field\"\n      >\n        {field}\n      </Button>\n    );\n  });\n\n  return (\n    <div>\n      <div id=\"sort-button\" className=\"sort-button\"></div>\n      <Popover\n        placement=\"bottom\"\n        isOpen={popoverOpen}\n        target=\"sort-button\"\n        toggle={toggle}\n      >\n        <PopoverBody>\n          <div className=\"sort-selector\">{sortList}</div>\n        </PopoverBody>\n      </Popover>\n    </div>\n  );\n}\n\nexport default SortButton;\n","import {\n  FETCH_CARDS_PENDING,\n  FETCH_CARDS_SUCCESS,\n  FETCH_CARDS_ERROR,\n  PAGE_LOADED,\n  SEARCH_CRITERIA_ENTERED,\n  CLEAR_CARDS,\n  CHANGE_SORT\n} from \"./actionTypes\";\n\nexport function fetchCardsPending() {\n  return {\n    type: FETCH_CARDS_PENDING\n  };\n}\n\nexport function fetchCardsSuccess(cards) {\n  return {\n    type: FETCH_CARDS_SUCCESS,\n    payload: cards\n  };\n}\n\nexport function fetchCardsError(error) {\n  return {\n    type: FETCH_CARDS_ERROR,\n    error: error\n  };\n}\n\nexport function pageLoaded({ pageNumber, totalCount }) {\n  return {\n    type: PAGE_LOADED,\n    payload: { pageNumber, totalCount }\n  };\n}\n\nexport function searchCriteriaEntered(searchCriteria) {\n  return {\n    type: SEARCH_CRITERIA_ENTERED,\n    payload: { searchCriteria }\n  };\n}\n\nexport function clearCards() {\n  return {\n    type: CLEAR_CARDS,\n    payload: null\n  };\n}\n\nexport function changeSort(sortField) {\n  return {\n    type: CHANGE_SORT,\n    payload: sortField\n  };\n}\n","import {\n  fetchCardsPending,\n  fetchCardsSuccess,\n  fetchCardsError,\n  pageLoaded\n} from \"./appActions\";\n\n// queue added last minute to cut down on duplicate requests\n// I think this might be the culprit behind the search bug\n// that breaks scroll loading\nconst requestQueue = [];\n\n/**\n * The action used to fetch cards from the API\n * @param {Integer} pageNumber - the number of the page to be loaded\n */\nfunction fetchCards(pageNumber) {\n  return dispatch => {\n    if (requestQueue.length) {\n      return dispatch(fetchCardsInternal(requestQueue.pop()));\n    } else {\n      return dispatch(fetchCardsInternal(pageNumber));\n    }\n  };\n}\n\nfunction fetchCardsInternal(pageNumber = 1) {\n  return (dispatch, getState) => {\n    const {\n      app: { currentSearchCriteria, sortField, loadingFromApi }\n    } = getState();\n\n    const pageSize = 20;\n    const baseUrl = \"https://api.magicthegathering.io\";\n    const path = \"v1/cards\";\n    const url = new URL(path, baseUrl);\n\n    url.searchParams.set(\"pageSize\", pageSize);\n    url.searchParams.set(\"page\", pageNumber);\n    url.searchParams.set(\"type\", \"Creature\");\n    url.searchParams.set(\"orderBy\", sortField);\n\n    Object.keys(currentSearchCriteria).forEach(key => {\n      if (currentSearchCriteria[key]) {\n        url.searchParams.set(key, currentSearchCriteria[key]);\n      }\n    });\n\n    const cardUrl = url.href;\n\n    if (loadingFromApi) {\n      requestQueue.push(pageNumber);\n      return;\n    }\n\n    let totalCount = 0;\n    dispatch(fetchCardsPending());\n    fetch(cardUrl)\n      .then(res => {\n        res.headers.forEach((value, key) => {\n          if (key === \"total-count\") totalCount = value;\n        });\n\n        return res.json();\n      })\n      .then(res => {\n        if (res.error) {\n          throw res.error;\n        }\n        dispatch(fetchCardsSuccess(res.cards));\n        dispatch(\n          pageLoaded({\n            pageNumber,\n            totalCount\n          })\n        );\n        return res.products;\n      })\n      .catch(error => {\n        console.log(error);\n        dispatch(fetchCardsError(error));\n      })\n      .finally(() => {\n        if (requestQueue.length) {\n          const pageToFetch = requestQueue.pop();\n          if (pageToFetch > pageNumber) {\n            return dispatch(fetchCardsInternal(pageToFetch));\n          }\n        }\n      });\n  };\n}\n\nexport default fetchCards;\n","import { clearCards, searchCriteriaEntered } from \"./appActions\";\nimport fetchCards from \"./fetchCards\";\n\nlet timeout = null;\n\nfunction searchCards(criteria) {\n  return dispatch => {\n    dispatch(searchCriteriaEntered(criteria));\n    clearTimeout(timeout);\n    timeout = null;\n\n    timeout = setTimeout(() => {\n      dispatch(clearCards());\n      dispatch(fetchCards(1));\n    }, 1000);\n  };\n}\n\nexport default searchCards;\n","import { clearCards, changeSort } from \"./appActions\";\nimport fetchCards from \"./fetchCards\";\n\nfunction sortCards(sortField) {\n  return dispatch => {\n    dispatch(clearCards());\n    dispatch(changeSort(sortField));\n    dispatch(fetchCards(1));\n  };\n}\n\nexport default sortCards;\n","import React, { useEffect } from \"react\";\nimport { Header, PagedList, Footer, Card } from \"../components\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport fetchCards from \"../actions/fetchCards\";\nimport searchCards from \"../actions/searchCards\";\nimport sortCards from \"../actions/sortCards\";\nimport \"./App.css\";\n\nconst mapStateToProps = state => {\n  const header = { ...state.app };\n  const pagedList = {\n    lastPageFetched: state.app.lastPageFetched,\n    loadingFromApi: state.app.loadingFromApi,\n    hasNextPage: state.cards.allIds.length < state.app.totalCardCount\n  };\n  const footer = {\n    ...state.app,\n    loadedCardCount: Object.keys(state.cards.byIds).length\n  };\n\n  return {\n    header,\n    footer,\n    pagedList,\n    ...state.cards\n  };\n};\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      fetchItemsForPage: pageNumber => fetchCards(pageNumber),\n      setSearchCriteria: searchCriteria => searchCards(searchCriteria),\n      changeSort: sortField => sortCards(sortField)\n    },\n    dispatch\n  );\n\nfunction App({\n  header,\n  footer,\n  pagedList,\n  allIds,\n  byIds,\n  fetchItemsForPage,\n  setSearchCriteria,\n  changeSort\n}) {\n  const cards = allIds.map(itemId => {\n    const item = byIds[itemId];\n\n    return <Card props={item} key={item.id}></Card>;\n  });\n\n  useEffect(() => console.log(\"App redrawing!\"));\n\n  return (\n    <div className=\"app red\">\n      <Header\n        props={header}\n        setSearchCriteria={setSearchCriteria}\n        changeSort={changeSort}\n      ></Header>\n      <PagedList pagedList={pagedList} fetchItemsForPage={fetchItemsForPage}>\n        {cards}\n      </PagedList>\n      <Footer props={footer}></Footer>\n    </div>\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nexport default function configureStore(initialState) {\n  return createStore(rootReducer, initialState, applyMiddleware(thunk));\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./store\";\nimport App from \"./containers/App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <Provider store={configureStore()}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}